{"timestamp":"2025-07-21T12:28:53.010688","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-21T12:28:53.011121","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/producer_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-21T12:28:53.052576","level":"info","event":"Connection Retrieved 'kafka_default'","logger":"airflow.hooks.base"}
{"timestamp":"2025-07-21T12:28:53.054883Z","level":"error","event":"%4|1753100933.054|CONFWARN|rdkafka#producer-1| [thrd:app]: Configuration property group.id is a consumer property and will be ignored by this producer instance","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-21T12:28:53.055339Z","level":"error","event":"%4|1753100933.054|CONFWARN|rdkafka#producer-1| [thrd:app]: Configuration property auto.offset.reset is a consumer property and will be ignored by this producer instance","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-21T12:28:53.055419Z","level":"error","event":"%3|1753100933.054|FAIL|rdkafka#producer-1| [thrd:localhost:9092/bootstrap]: localhost:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-21T12:28:53.054886","level":"info","event":"Producer <cimpl.Producer object at 0xffff779f8900>","logger":"airflow.task.hooks.airflow.providers.apache.kafka.hooks.produce.KafkaProducerHook"}
{"timestamp":"2025-07-21T12:28:53.055014","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"TypeError","exc_value":"my_producer_function() missing 2 required positional arguments: 'producer' and 'context'","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":877,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1164,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/apache/kafka/operators/produce.py","lineno":126,"name":"execute"}],"is_group":false,"exceptions":[]}]}
